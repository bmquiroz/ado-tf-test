# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:    
  - stage: Dev
    displayName: Dev
    jobs:
      - job: plan
        pool:
          vmImage: ubuntu-latest
        displayName:  Terraform Dev Init and Apply
        steps:
        - task: TerraformTaskV4@4
          inputs:
            provider: 'aws'
            command: 'init'
            workingDirectory: '$(System.DefaultWorkingDirectory)/tf/plans'
            backendServiceAWS: 'rcits-aws-1'
            backendAWSBucketName: 'rcits-terraform'
            backendAWSKey: 'ado-tf-test'

  #     - job: approve
  #       dependsOn: plan
  #       condition: and (succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  #       pool: server
  #       displayName: Wait for approval
  #       steps:
  #       - task: ManualValidation@0
  #         timeoutInMinutes: 15 # task times out in 15 mins
  #         inputs:
  #           notifyUsers: saasproject86@outlook.com
  #           instructions: 'Please validate the build configuration and resume'
  #           onTimeout: 'reject'

  #     - job: apply
  #       dependsOn: approve
  #       pool:
  #         vmImage: ubuntu-latest
  #       displayName:  Terraform Dev Init and Apply
  #       steps:
  #       - task: TerraformTaskV4@4
  #         inputs:
  #           provider: 'aws'
  #           command: 'init'
  #           backendServiceAWS: 'rcits-aws-1'
  #           backendAWSBucketName: 'rcits-terraform'
  #           backendAWSKey: 'ado-tf-test'

  # - stage: Prod
  #   displayName: Prod
  #   jobs:
  #     - job: plan
  #       pool:
  #         vmImage: ubuntu-latest
  #       displayName: Terraform Prod Init and Apply
  #       steps:
  #       - task: TerraformTaskV4@4
  #         inputs:
  #           provider: 'aws'
  #           command: 'init'
  #           backendServiceAWS: 'rcits-aws-1'
  #           backendAWSBucketName: 'rcits-terraform'
  #           backendAWSKey: 'ado-tf-test'

  #     - job: approve
  #       dependsOn: plan
  #       condition: and (succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  #       pool: server
  #       displayName: Wait for approval
  #       steps:
  #       - task: ManualValidation@0
  #         timeoutInMinutes: 15 # task times out in 15 mins
  #         inputs:
  #           notifyUsers: saasproject86@outlook.com
  #           instructions: 'Please validate the build configuration and resume'
  #           onTimeout: 'reject'
    
  #     - job: apply
  #       dependsOn: approve
  #       pool:
  #         vmImage: ubuntu-latest
  #       displayName: Terraform Prod Apply
  #       steps:
  #       - task: TerraformTaskV4@4
  #         inputs:
  #           provider: 'aws'
  #           command: 'init'
  #           backendServiceAWS: 'rcits-aws-1'
  #           backendAWSBucketName: 'rcits-terraform'
  #           backendAWSKey: 'ado-tf-test'